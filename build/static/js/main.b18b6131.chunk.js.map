{"version":3,"sources":["api/index.js","components/Header.js","auth/index.js","components/Modal.js","components/Routines.js","components/Activities.js","components/PublicRoutines.js","index.js"],"names":["BASE_URL","registerUser","username","password","a","fetch","method","headers","body","JSON","stringify","response","json","data","localStorage","setItem","token","loginUser","getPublicRoutinesByUserFrontEnd","fetchActivitiesFrontEnd","getAllPublicRoutinesFrontEnd","createRoutineFrontEnd","name","goal","isPublic","parse","getItem","Authorization","updateRoutineFrontEnd","routineId","deleteRoutineFrontEnd","Header","currentUser","setCurrentUser","setApiMessage","useState","setUsername","setPassword","formButton","setFormButton","handleSubmit","event","preventDefault","handleUserLogout","result","hanldeLoginAndRegister","console","log","removeItem","user","message","className","onSubmit","to","activeClassName","type","value","onClick","placeholder","onChange","e","target","ModalF","show","handleChange","handleClose","Modal","onHide","closeButton","Title","Body","Form","Group","controlId","Control","Footer","Button","variant","Check","label","Routines","userRoutines","initialState","setUserRoutines","routineID","setShow","newRoutine","setNewRoutine","routineUpdateDelete","setroutineUpdateDelete","handleShow","resetNewRoutine","findRoutineCrud","map","routine","id","routineCrud","deleteRoutine","prevNewRoutine","length","creatorName","activities","description","duration","count","Activities","PublicRoutines","routines","App","setRoutines","setActivities","useEffect","then","catch","error","publicRoutines","path","exact","style","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b18b6131.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\"\n//https://fitnesstrac-kr.herokuapp.com/api\n//https://glacial-bayou-64478.herokuapp.com/api\n//https://calm-lowlands-92047.herokuapp.com/api\n//USERS\n// Register a new User\nexport const registerUser = async (username, password) => {\n    try{\n        const response = await fetch(`${BASE_URL}/users/register`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ \n                  username: username,\n                  password: password,\n            }),\n        });\n        const data  = await response.json();\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        return data;\n    }catch(error){\n        throw error\n    }\n}\n\n//Login a new User\nexport const loginUser = async (username, password) => {\n    try{\n        const response = await fetch(`${BASE_URL}/users/login`,{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n            })\n        });\n        const data = await response.json();\n        localStorage.setItem('token', JSON.stringify(data.token));\n        return data\n    }catch(error){\n        throw error\n    }\n}\n\n// /user/me\nexport const me = async () => {\n    const token  = localStorage.getItem(\"token\")\n\n    if(!token) return;\n\n    try{\n        const response = await fetch(`${BASE_URL}/users/me`,{\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n              },   \n        });\n        const data = await response.json();\n        return data\n    }catch(error){\n        throw error\n    }\n}\n\n// GET /:username/routines\nexport const getPublicRoutinesByUserFrontEnd = async (username) => {\n  \n    try {\n        const response = await fetch(`${BASE_URL}/users/${username}/routines`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const data = await response.json();\n    \n        return data;\n      } catch (error) {\n        throw error;\n      }\n}\n\n//ACTIVITIES\n// GET /api/activities\nexport const fetchActivitiesFrontEnd = async ( ) => {\n    try{\n        const response = await fetch(`${BASE_URL}/activities`,{\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n         const data = await response.json();\n        return data;\n    }catch(error){\n         throw error;\n    }    \n}   \n\n\n// POST /api/activities\nexport const createActivityFrontEnd = async (name, description) => {\n    try{\n        const token = localStorage.getItem(\"token\");\n        if(!token) return\n        const response = await fetch(`${BASE_URL}/activities`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                    name: name,\n                    description: description,\n                })\n            });\n            const data = await response.json();\n            return data\n    }catch(error){\n        throw error\n    }\n}\n\n// PATCH /:activityId\nexport const updateActivityFronEnd = async(activityID, name, description) => {\n    try{\n        const token = localStorage.getItem(\"token\");\n        if(!token) return   \n        const response = await fetch(`${BASE_URL}/activities/${activityID}`,{\n            method: \"PATCH\",\n            body:JSON.stringify({\n                name: name,\n                description: description\n            })\n        });\n        const data = await response.json();\n        return data    \n    }catch(error){\n        throw error\n    }\n\n}\n\n\n// GET /:activityId/routines\nexport const getPublicRoutinesByActivityFrontEnd = async (activityID)=> {\n    try{\n        const response = await fetch(`${BASE_URL}/activities/${activityID}/routines`,{\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        return data\n    }catch(error){\n        throw error\n    }\n}\n\n// ROUTINES\n// GET /api/routines\nexport const getAllPublicRoutinesFrontEnd = async () => {\n    try{\n        const response = await fetch(`${BASE_URL}/routines`,{\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        return data;\n    }catch(error){\n        throw error;\n    }    \n}\n\n// POST /api/routines\nexport const createRoutineFrontEnd = async({name, goal, isPublic}) => {\n    try{\n        const token = JSON.parse(localStorage.getItem(\"token\"));\n        \n        const response = await fetch(`${BASE_URL}/routines`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                    name: name,\n                    goal: goal,\n                    isPublic: isPublic\n                })\n            });\n            const data = await response.json();\n            return data\n    }catch(error){\n        throw error\n    }\n}\n\n// PATCH /api/routines/:routineId\nexport const updateRoutineFrontEnd = async (routineId, name, goal, isPublic) => {\n    try{\n        const token = localStorage.getItem(\"token\");\n        if(!token) return;\n        const response = await fetch(`${BASE_URL}/routines/${routineId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                name: name,\n                goal: goal,\n                isPublic: isPublic\n            })\n        });\n        const data = await response.json()\n        return data;\n    }catch(error){\n        throw error\n    }\n}\n\n// DELETE /api/routines/:routineId\nexport const deleteRoutineFrontEnd = async (routineId) => {\n    try{\n        const token = localStorage.getItem(\"token\");\n        if(!token) return;\n        const response = await fetch(`${BASE_URL}/routines/${routineId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n        });\n        const data = await response.json()\n        return data;\n    }catch(error){\n        throw error\n    }\n}\n\n// POST /api/routines/:routineId/activities\n\nexport const addActivityToRoutineFronEnd = async(routineId,  activityId, duration, count) => {\n    try{\n        const response = await fetch(`${BASE_URL}/routines/${routineId}/activities`,{\n            method: \"POST\",\n            body: JSON.stringify({\n                activityId: activityId,\n                duration: duration,\n                count: count \n              })\n        });\n        const data = await response.json()\n        return data;\n    }catch(error){\n        throw error\n    }\n}\n\n//ROUTINE_ACTIVITIES\n//PATCH /api/routine_activities/:routineActivityId\n\nexport const updateRoutineActivityFrontEnd = async(routineActivityId, count, duration) =>{\n    try{\n        const token = localStorage.getItem(\"token\");\n        if(!token) return;\n        const response = await fetch(`${BASE_URL}/routine_activities/${routineActivityId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                count: count,\n                duration: duration,\n            })\n        });\n            const data = await response.json()\n            return data;\n    }catch(error){\n        throw error\n    }\n}\n\n//DELETE /api/routine_activities/:routineActivityId\n\nexport const deleteRoutineActivityFrontEnd = async(routineActivityId) =>{\n    try{\n        const token = localStorage.getItem(\"token\");\n        if(!token) return;\n        const response = await fetch(`${BASE_URL}/routine_activities/${routineActivityId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n        });\n            const data = await response.json()\n            return data;\n    }catch(error){\n        throw error\n    }\n}","import React, {useState} from 'react';\nimport \"./Header.css\";\nimport {registerUser, loginUser} from '../api';\nimport { NavLink } from 'react-router-dom';\nimport {storeCurrentUser, clearCurrentUser} from '../auth'\n\nconst Header = ({currentUser, setCurrentUser, setApiMessage}) => {\n    \n    const [username, setUsername]  = useState('');\n    const [password, setPassword]  = useState('');\n    \n    \n    const [formButton, setFormButton] = useState();\n\n    const handleSubmit = async(event) =>{\n        \n        event.preventDefault();\n        \n        \n        if(formButton === 'logout') return handleUserLogout()\n\n        if (formButton === \"login\" ){\n            try{\n                const result = await loginUser(username, password)\n                hanldeLoginAndRegister(result)     \n            }catch(error){\n                console.log(error);\n            }   \n        }\n\n        if (formButton === \"register\" ){\n           try{\n            const result = await registerUser(username, password)\n            hanldeLoginAndRegister(result)  \n           }catch(error){\n             console.log(error);\n           }   \n        }\n    }\n\n    const handleUserLogout = () => {\n        clearCurrentUser();\n        setCurrentUser(null);\n    }\n\n    const hanldeLoginAndRegister = (result) => {\n        setApiMessage(result.message);\n        storeCurrentUser(result.user); \n        setCurrentUser(result.user);\n        setUsername('')\n        setPassword('')\n    }\n\nreturn (\n    <header>\n        <h1>Welcome to Fitness Tracker</h1>\n        <form \n            className=\"user-select\" \n            onSubmit={handleSubmit}>\n            {\n                currentUser\n            ? <>\n                <NavLink to=\"/myroutines\" activeClassName=\"current\">My Routines</NavLink>\n                <NavLink to=\"/publicroutines\" activeClassName=\"current\">Public Routines</NavLink>\n                <NavLink to=\"/activities\" activeClassName=\"current\">Activities</NavLink>\n                <button name=\"logout\" type=\"submit\" value=\"logout\" onClick={ () =>{setFormButton('logout')} }>LOG OUT, { currentUser.username }</button>\n              </>\n            : <>\n                <input placeholder=\"username\" value={username} onChange={(e)=>{setUsername(e.target.value)}}></input>\n                <input placeholder=\"password\" type=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}}></input>\n                <button name=\"register\" type=\"submit\" value=\"register\" onClick={() =>{setFormButton('register')}}>REGISTER</button>\n                <button name=\"login\" type=\"submit\" value=\"login\" onClick={() =>{setFormButton('login')}}>LOG IN</button>\n             </>        \n            }\n        </form>\n    </header>\n);\n}\nexport default Header;","export function storeCurrentUser(user) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n}\n  \n  export function getCurrentUser() {\n    const user = JSON.parse(localStorage.getItem('currentUser'));\n     return user;\n}\n\n  export function clearCurrentUser() {\n    localStorage.removeItem('currentUser');\n}\n  ","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst ModalF = ({show, handleChange, formButton, handleClose, handleSubmit, setFormButton}) => {\nreturn(\n    \n    <div>\n        <Modal show={show} onHide={handleClose}>\n            <form onSubmit={handleSubmit}>\n                \n                \n                \n\n                {   formButton === 'create' && ( <>\n                        <Modal.Header closeButton>\n                           <Modal.Title>New Routine</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <Form.Group controlId=\"formBasicEmail\">\n                              <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter routine name\" onChange={handleChange} />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                              <Form.Control type=\"text\" name=\"goal\" placeholder=\"Enter routine goal\" onChange={handleChange} />\n                            </Form.Group> \n                        </Modal.Body>  \n\n                        <Modal.Footer>\n                           <Button variant=\"secondary\" type=\"submit\" onClick={() =>{setFormButton('close');handleClose()}}>\n                            Close\n                          </Button>\n                          <Button variant=\"primary\" type=\"submit\" onClick={() =>{handleClose()}}>\n                            Create\n                          </Button> \n                        \n                        \n                        \n                        </Modal.Footer>\n\n                </>)}\n\n                    {   formButton === 'update'&& ( <>\n                        \n                        <Modal.Header closeButton>\n                           <Modal.Title>Update Routine</Modal.Title>\n                        </Modal.Header>\n\n                         <Modal.Body>\n                             <Form.Group controlId=\"formBasicEmail\">\n                               <Form.Control type=\"text\" name=\"name\" placeholder=\"Update routine name\" onChange={handleChange} />\n                             </Form.Group>\n                             <Form.Group controlId=\"formBasicPassword\">\n                               <Form.Control type=\"text\" name=\"goal\" placeholder=\"Update routine goal\" onChange={handleChange} />\n                             </Form.Group>  \n                            <Form.Group controlId=\"formBasicCheckbox\">\n                                <Form.Check type=\"checkbox\" name=\"public\" label=\"Routine public\" onChange={handleChange}/>\n                            </Form.Group>                     \n                         </Modal.Body>  \n                         <Modal.Footer>\n                            <Button variant=\"secondary\" type=\"submit\" onClick={() =>{setFormButton('close');handleClose()}}>\n                             Close\n                           </Button>\n                           <Button variant=\"primary\" type=\"submit\" onClick={() =>{setFormButton('update'); handleClose()}}>\n                             Update\n                           </Button> \n                        </Modal.Footer>\n                 </>)}\n\n            </form>\n        </Modal>\n       \n    </div>\n    );\n}\n\nexport default ModalF;","import React, {useState} from \"react\";\nimport ModalF from './Modal';\nimport Button from 'react-bootstrap/Button';\nimport {createRoutineFrontEnd, deleteRoutineFrontEnd, updateRoutineFrontEnd} from '../api';\n\nimport \"./Routines.css\";\n\nconst Routines = ({currentUser, userRoutines, setUserRoutines}) => {\n\n    let initialState = {routineID:\"\", name:\"\", goal:\"\", isPublic:true};\n   \n\n    const [show, setShow] = useState(false);\n    const [newRoutine, setNewRoutine] = useState({routineID:\"\", name:\"\", goal:\"\", isPublic:true})\n    const [routineUpdateDelete, setroutineUpdateDelete] = useState({routineID:\"\", name:\"\", goal:\"\", isPublic:true})\n    const [formButton, setFormButton] = useState(\"\");\n    \n    \n                \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    const handleChange = (event) => {\n\n        const { name, value } = event.target;\n\n        setNewRoutine((prevNewRoutine)=>{\n            return{\n                ...prevNewRoutine,\n            [name]: value\n        }})\n    }\n\n    const handleSubmit = async(event) => {\n        event.preventDefault()\n        if(formButton === 'openModal'||formButton === 'close') { \n            resetNewRoutine()\n            setFormButton(\"\")\n        };\n\n        if(formButton === 'create'){\n            if(!newRoutine.name || !newRoutine.goal ) return \n                \n            try{\n                const result = await createRoutineFrontEnd(newRoutine)\n                resetNewRoutine()\n                setFormButton(\"\")\n            }catch(error){\n                console.log(error);\n            }\n        }\n\n        if(formButton === 'update'){\n           \n            try{\n                const result = await updateRoutineFrontEnd(routineUpdateDelete)\n                resetNewRoutine()\n                setFormButton(\"\")\n            }catch(error){\n                console.log(error);\n            }\n        }\n        \n    }\n\n    const findRoutineCrud = (routineId) =>{\n        const [routineCrud] = userRoutines.map(routine=>{\n            if(routineId === routine.id) {\n                return (routine)\n            }\n        })\n        const {id, name, goal, isPublic} = routineCrud\n        setroutineUpdateDelete({id, name, goal, isPublic})\n        formButton === 'delete' && deleteRoutine(id) \n        \n    }\n\n    const deleteRoutine =async(routineId)=> {\n       \n        try{\n            const result = await deleteRoutineFrontEnd(routineId)\n        }catch(error){\n            console.log(error);\n            \n        }\n        \n    }\n\n    const resetNewRoutine = () => {\n        setNewRoutine(initialState)\n    }\n\n    return( \n        <div className=\"routines\">\n            <h2>Hi {currentUser.username}, Here are your Routines &nbsp;|&nbsp; <Button variant=\"primary\" onClick={() =>{setFormButton('create'); handleShow()}}>Create Routine</Button></h2>\n            <>\n                <ModalF show={show}formButton={formButton} handleClose={handleClose} handleShow={handleShow}  handleChange={handleChange} handleSubmit={handleSubmit} setFormButton={setFormButton}/>   \n            </>\n            <p>There is a total of {userRoutines.length} routines.</p>\n            \n            {\n                userRoutines.map(({id, name, goal, creatorName, activities}) =>(\n                    \n                <div key={id } className=\"post\">\n                    <h3>Routine Name: {name} &nbsp;|&nbsp; <Button variant=\"primary\" onClick={() =>{setFormButton('update'); handleShow(); findRoutineCrud(id)}}>Update</Button>\n                    &nbsp;|&nbsp; <Button variant=\"primary\" onClick={() =>{setFormButton('delete'); findRoutineCrud(id);}}>Delete</Button></h3>\n                    <p>Routine Goal: {goal}</p>\n                    <p>Creator Name: {creatorName}</p>\n                    {\n                        activities.length > 0 ? <>\n                            {activities.map(({id, name, description, duration, count})=> (\n                                <div key={id} className=\"activities\">\n                                    <h3>Routine Activity: {name}</h3>\n                                    <p>Activity Description: {description}</p>\n                                    <p>Duration: {duration}</p>\n                                    <p>Count: {count}</p>\n                                </div>\n                            ))} </>\n                        : <> <p>There are {activities.length} Activities</p> </>\n                    }                \n                </div>  \n                ))}\n        </div>\n\n    );\n}\nexport default Routines;","import React from \"react\";\nimport \"./Activities.css\";\n\nconst Activities = ({currentUser, activities}) => {\n    return( \n        <div className=\"activities\">\n            <h2>Hi {currentUser.username}, Here are all activities</h2>\n            <p>There is a total of {activities.length} activities.</p>\n            {\n                activities.map(({id, name, description}) =>(\n                <div key={id} className=\"post\">\n                    <h3>Activity Name: {name}</h3>\n                    <p>Description: {description}</p>\n                </div>  \n                ))}\n        </div>\n    );\n}\n\nexport default Activities;","import React from 'react';\nimport './PublicRoutines.css';\n\nconst PublicRoutines = ({currentUser, routines}) => {\n    return( \n        <div className=\"publicroutines\">\n            <h2>Hi {currentUser.username}, Here are all public routines with their activities</h2>\n            <p>There is a total of {routines.length} public routines.</p>\n\n            {\n                routines.map(({id, name, goal, creatorName, activities}) =>(\n                <div key={id} className=\"post\">\n                    <h3>Routine Name: {name}</h3>\n                    <p>Routine Goal: {goal}</p>\n                    <p>Creator Name: {creatorName}</p>\n                    \n                    {activities.map(({id, name, description, duration, count})=> (\n                        <div key={id} className=\"activities\">\n                            <h3>Routine Activity: {name}</h3>\n                            <p>Activity Description: {description}</p>\n                            <p>Duration: {duration}</p>\n                            <p>Count: {count}</p>\n                        </div>\n                    ))}\n                </div>  \n                ))}\n        </div>\n    );\n}\nexport default PublicRoutines;","import { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport { Header, Routines, Activities, PublicRoutines, CreateForm } from \"./components\";\nimport {getCurrentUser} from './auth';//\nimport {getPublicRoutinesByUserFrontEnd, fetchActivitiesFrontEnd, getAllPublicRoutinesFrontEnd} from './api'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst App = () => {\n\n    const [currentUser, setCurrentUser] = useState(\"\");\n    const [userRoutines, setUserRoutines] = useState([]);\n    const [routines, setRoutines] = useState([]);\n    const [activities, setActivities]= useState([]);\n    const [apiMessage, setApiMessage] = useState('');\n    \n    \n\n    useEffect(()=> {\n        if(!currentUser) {setUserRoutines([]); setRoutines([]); setActivities([]); return;}\n        \n\n        getPublicRoutinesByUserFrontEnd(currentUser.username)\n            .then((routines)=>{\n                setUserRoutines(routines)\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        \n        fetchActivitiesFrontEnd()\n            .then((activities)=>{\n              setActivities(activities) \n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        \n        getAllPublicRoutinesFrontEnd()\n            .then((publicRoutines)=>{\n                setRoutines(publicRoutines) \n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        \n    }, [currentUser]);\n\n    return(\n        <Router> \n            <div id=\"App\">\n                <Header currentUser={currentUser} setCurrentUser={setCurrentUser} setApiMessage={setApiMessage} />\n                {\n                    currentUser ? <>\n                        <Switch>\n                            <Route path=\"/myroutines\">\n                                <Routines currentUser={currentUser} userRoutines={userRoutines} setUserRoutines={setUserRoutines}/>\n                            </Route>\n                            <Route path=\"/publicroutines\">\n                                <PublicRoutines currentUser={currentUser} routines={routines}/>\n                            </Route>\n                            <Route path=\"/activities\">\n                                <Activities currentUser={currentUser} activities={activities}  />\n                            </Route>\n                            <Route exact path=\"/\">\n                                <h2 style={{padding: \".5em\"}}>Welcome, {currentUser.username }</h2>\n                              \n                             </Route>\n                                <Redirect to=\"/\" />\n                        </Switch>\n                </> : <>\n                    <Switch>\n                        <Route exact path=\"/\">\n                        <h2 style={{ padding: \".5em\" }}>Please register or log in, above.</h2>\n                        </Route>\n                        <Redirect to=\"/\" />\n                    </Switch>\n                    </>\n                }\n            </div>\n        </Router>    \n    );\n}\n\nReactDOM.render(<App/>,  document.getElementById(\"app\"));"],"sourceRoot":""}